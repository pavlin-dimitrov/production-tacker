spring.datasource.url=jdbc:mysql://localhost:3306/production_progress?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.hibernate.ddl-auto=update
server.error.include-message=always
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

logging.level.org.springframework.security=DEBUG

server.port=8080

spring.jpa.hibernate.format_sql=true
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver

spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=false

#spring.security.user.name=user
#spring.security.user.password=password

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url=${JDBC_DATABASE_URL:jdbc:postgresql://localhost:5432/production_progress}
#spring.datasource.username=${JDBC_DATABASE_USERNAME:postgres}
#spring.datasource.password=${JDBC_DATABASE_PASSWORD:password}
#
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto=update
#
## Hibernate properties
#spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.hibernate.format_sql=true
#
## Thymeleaf settings
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html
#spring.thymeleaf.mode=HTML
#spring.thymeleaf.encoding=UTF-8
#spring.thymeleaf.cache=false
#
## Specify the DB driver
#spring.datasource.driverClassName=org.postgresql.Driver
#
## Server port (Heroku will set it via the $PORT variable)
#server.port=${PORT:8080}
#
## Logging
#logging.level.org.springframework.security=DEBUG
#server.error.include-message=always
